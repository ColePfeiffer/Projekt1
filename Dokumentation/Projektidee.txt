=======================================================================
=== 	 Nicht-spieler-Charaktergenerator für Pen & Paper-Systeme 	=== 	
=== 			Projektidee ColePfeiffer, 2016-09-15 		===
=======================================================================

Änderungen am Spreadsheet: https://docs.google.com/spreadsheets/d/1cuqL1gfQCAzdlc3QMM2kMz-1ESQbYGHfs5jEqbDLmaU/edit?usp=sharing
Kommentarfunktion ist aktiviert.


Anschaulichere Version (reiner Text): https://docs.google.com/document/d/1a620CZdZxkBEZM4UboCVd3AAZPHF7xmTcpjtatxIlsA/edit#

-------------

Ich bin ein großer P&P-Rollenspielfan. Als Spielleiter ist es für fast jedes eigene Abenteuer nötig, sich Nichtspielercharaktere auszudenken, die häufig nur in einem Abenteuer auftauchen und somit den Aufwand der Erstellung kaum rechtfertigen.

Die Anwendung richtet sich in erster Linie an Spielleiter und ist als Generator zu verstehen. Sie soll den Nutzer bei der Erstellung der erzählerischen Anteile unterstützen. Das ist die Kernfunktion der Anwendung. Die Werteberechnung der Attribute soll dynamisch über Würfelmodifikatoren in Form von Zählern erfolgen. 

Darüber hinaus soll es einen Kooperationsmodus geben. Dieser richtet sich an Spieler und Spielleiter. Gemeinsam können Kontakte von der Spielerfigur erstellt oder vertieft werden (Beispiel: Connections aus Shadowrun). Es können aber auch gemeinsam neue Figuren angelegt werden.

Es wird die Möglichkeit einer Account-Erstellung geben. So können Charaktere in eine Bibliothek abgespeichert- und mit anderen geteilt werden. Eine Suchfunktion soll öffentliche Inhalte einsehbar machen – diese können so bewertet, kommentiert und übernommen werden. 
Nutzer sollen die Anwendung durch neue Systeme und angepasste Einstellungsoptionen erweitern können.

Nutzer und Programm stehen in einem Austausch miteinander. Das Programm geht auf Nutzereingaben ein- und gibt dem Nutzer individualisierte Ausgaben. 

__________________________________________
Wie stelle ich mir das vor?
__________________________________________

-	Grundauswahl: Einige wenige Punkte müssen im Vorfeld bestimmt werden. Andere sind optional.
Beispiel: System/Setting: Mittelalter, Rasse: Zwerg, Funktion: Hauptperson (Questgeber)

-	Fragenpools: Als Fragenpool bezeichne ich eine Gruppierung von Fragen und Antworten. Diese Pools richten sich primär nach der Funktion der Figur. Sie enthalten thematisch-sortierte Fragen/Antworten (z.B. nach Kindheit, Moral, Ziele) mit definierten Abhängigkeiten.
Beispiel: Eine Hauptfigur (Typ: Antagonist) erhält andere Fragen als eine neutral-gesinnte Nebenfigur. Hier wird z.B. nach dem Motiv gefragt oder Ähnliches. Es werden zudem Fragen oder Antworten, die nicht in das Setting oder zu sonstigen Voreinstellungen passen, herausgenommen. Eine Frage aus dem Bereich Kindheit könnte auf den Geburtsort abzielen.

Wichtig: Hier geht es zunächst nur um den GRUND-Fragenpool. Zu diesem Zeitpunkt wird dieser ziemlich groß sein. Im Verlauf der Generierung geht das Programm auf Nutzereingaben ein und bearbeitet kontinuierlich besagten Pool. Im Endeffekt soll es sich um einen individualisierten Pool handeln, der auf vorherigen und aktuellen Nutzereingaben beruht.

-	Ablauf: Der Nutzer durchläuft jetzt die thematisch-angeordneten Fragen/Antwort-Gruppierungen innerhalb des Grund-Fragenpools. 
Einige unpassende Fragen sind bereits (aufgrund der Vorauswahl) weggefallen. Die Anwendung merkt sich die Entscheidungen des Nutzers und passt sich während der Generierung an diese an. Zum Teil führt das dazu, dass sich Wege verschließen oder öffnen. Das Programm kann aber auch Vorschläge machen, wenn es merkt, dass eine spätere Auswahl eine frühere revidieren könnte. Es weist den Nutzer auf mögliche Konflikte hin und fordert ihn dazu auf diese näher auszuführen, falls gewollt. (Das soll mit Flags und Countern erreicht werden.)

-	Werteberechnung erfolgt nach der Generierung der erzählerischen Anteile:
Bei vielen Wahlmöglichkeiten zählen Counter mit. Für den Nutzer ist das nicht einsehbar. Beispiel: Figur stammt vom Land, geht einem körperlichen Beruf nach und treibt viel Sport oder Ähnliches – hier würde der Counter für das Attribut Stärke/Gewandtheit hochzählen und sich am Ende als Modifikator aufs Würfelergebnis auswirken. 

- 	Der Kooperationsmodus ist ähnlich aufgebaut, aber hier können mehrere Personen zeitgleich arbeiten. 

__________________________________________
Ablauf
__________________________________________


Erste Form – klassisches EVA-Prinzip bei hierarchischen Fragestellungen

E: Nutzer soll eine Auswahl aus verschiedenen Antworten treffen, um eine Frage zu beantworten.
V: Das Programm generiert basierend auf der Nutzereingabe (für den Nutzer nicht einsehbar) passende weitere Fragen und Auswahlmöglichkeiten. 
A: Gibt die nächste Frage aus, Nutzer wählt erneut aus, usw.

Zweite Form - Sinnvolle Kombinationen finden auf globaler Ebene

E: wie oben
V und R (Reaktion): Das Programm muss Kombinationen bilden können, um auf globaler Ebene zu funktionieren – hier kommen die Abhängigkeiten ins Spiel. Hat eine Figur x und y gewählt, dann kann sie nicht mehr z wählen. Hätte sie nur x oder y gewählt, könnte sie z wählen. Das Programm soll möglichst sinnvoll auf Nutzereingaben reagieren. Es streicht also konsequent Fragen oder Antworten aus späteren Kategorien – oder aber wählt besonders passende Fragen und Antworten heraus, die aufgrund der Kombination vorheriger Eingaben besonders interessant scheinen. 

Dritte Form – Konflikte ausfindig machen und Vorschläge machen

E: wie oben
V und R: Das Programm wertet bisher erfolgte, gespeicherte, Nutzereingaben auch auf bereits abgeschlossene Fragenstellungen an. Das heißt, dass bei entsprechender Eingabe auch im Nachhinein, auf alte Fragen verwiesen wird, falls ein „Konflikt“ auftaucht.
Beispiel: Die Figur soll besonders tierlieb sein. Später wählt der Nutzer den Beruf Schlachter. Nun verweist das Programm auf die entsprechende Stelle, bietet einen Alternativvorschlag oder fordert den Nutzer dazu auf, den Konflikt näher zu beschreiben.

******************************************************************************



(Anmerkung: 

Ich habe versucht den Text auf die wesentlichen Elemente herunterzubrechen und hoffe, dass er so überschaubarer ist. Auch habe ich versucht die Interaktionsmöglichkeiten konkreter zu benennen und mehr auf den eigentlichen Ablauf einzugehen.

Ich werde jetzt hier gesondert auf ihr Feedback eingehen, weil ich viele Punkte auf die Sie sich bezogen haben, in der neuen Version gar nicht mehr so detailliert beschreibe oder abgeändert habe und ich nicht möchte, dass es so wirkt, als würde ich nicht auf ihre Kritik eingehen. Ich hoffe, dass das in Ordnung ist.

Vielen Dank für den Link bezüglich der Abenteuerbücher. Ich kannte ähnliche Bücher von früher und wusste gar nicht, dass solche Reihen online existieren, aber finde das sehr spannend. 

Ich war mir zunächst nicht sicher wieso sie die Beschränkung auf zwei Personen für sinnlos halten, aber ich glaube, dass ich sie da zunächst missverstanden hatte. Die entsprechende Beschränkung habe ich entfernt. Jetzt soll es auch möglich sein über den Kooperationsmodus Figuren zu erstellen, die keine Kontakte sind – mit beliebig vielen Leuten gleichzeitig.

Auch der Punkt, dass an einer bestimmten Stelle die Generierung der biographischen Anteile erfolgt und der Nutzer die Reihenfolge nicht selbstbestimmen kann, hat mich zunächst irritiert. Ich glaube, dass mein vorheriger Text an vielen Stellen unverständlich oder irreführend war. Die vorgegebene Reihenfolge ist eigentlich nur programmtechnisch gemeint – das bedeutet, dass das Generieren der Fragenpools abhängig von der Grundauswahl des Nutzers ist. Daher kann erst dann damit begonnen werden, nachdem der Nutzer z.B. Abenteuerart und Setting ausgewählt hat. Ansonsten schränke ich den Nutzer hier nicht ein und die Vorauswahl ist sehr minimiert gehalten.

Ich hoffe wirklich sehr, dass die gegenwärtigen Änderungen in die richtige Richtung gehen und freue mich aufs nächste Feedback.

*

Eine etwas anschaulichere Version des Textes können Sie, wenn Sie mögen, hier einsehen: https://docs.google.com/document/d/1a620CZdZxkBEZM4UboCVd3AAZPHF7xmTcpjtatxIlsA/edit#

===========================================








============================================
=== Projektidee ColePfeiffer, 2016-07-12 ===
===========================================

Kurz und knapp: Ich bin ein großer P&P-Rollenspielfan. Als Spielleiter ist es für fast jedes eigene Abenteuer nötig, sich Nichtspielercharaktere auszudenken, die häufig nur in einem Abenteuer auftauchen und somit den Aufwand der Erstellung kaum rechtfertigen. Die Anwendung soll diesen Prozess schneller- und einfacher machen.


Hauptfunktionen der Anwendung


	-	Auswürfeln der reinen Werte - angepasst ans jeweilige Spielesystem 
	-	interaktiver Charakterhintergrundgenerator, der die erzählerischen Aspekte des Charakters abdeckt (z.B. Werdegang, Moral)
	-	Kooperationsmodus für das Erstellen von Kontakten von Spielfiguren: Spielleiter und Spieler können synchron an Figuren arbeiten.
	
	- 	Accountverwaltung und eigene Inhalte
	
		-	nach einer Accounterstellung können Charaktere in einer Bibliothek abgespeichert und verwaltet werden
		-	Nutzer können die Anwendung durch neue Systeme, Settingvorgaben und individuell angepasste Einstellungsoptionen bei der Hintergrundgenerierung erweitern;
		-	alle öffentlichen, nutzergenerierten Inhalte können von anderen Usern über eine filterbare Suchfunktion eingesehen, bewertet und kommentiert werden; zudem lassen sie sich in die eigene Bibliothek importieren#
		
____________________________________________________________________________________________________________________________

					Details
____________________________________________________________________________________________________________________________

Details zum Ablauf


Sowohl bei der Wertegenerierung als auch beim Generieren des Charakterhintergrunds nimmt der Nutzer zunächst Anpassungen vor:
Er wählt sein Spielsystem, das Setting, sowie die Abenteuerart (z.B. Stadt, Detektivabenteuer) und die Wichtigkeit der Figur (z.B. storyrelvant) oder ihre Funktion (z.B. Zeuge). Darüber hinaus können weitere optionale Anpassungen vorgenommen werden (z.B. Geschlecht oder Name).

Jetzt kann der Nutzer zwischen zwei Erstellungsverfahren wählen:

1. Erst die Werteberechnung, dann die Hintergrundgenerierung
	- das ist dann sinnvoll, wenn der Nutzer eine Figur erstellen will, die schon im Vorhinein größtenteils feststeht
	- hier würde das Programm auf die Werte eingehen und basierend auf Stärken und Schwächen Vorschläge machen. 

2. Erst die Hintergrundgenerierung, dann die Werteberechnung
	- dann sinnvoll, wenn man noch nicht genau weiß in welche Richtung es gehen soll, aber man Werte möchte, die sich nach der Lebensgeschichte der Figur richten 
	- Hier würden sich Nutzerantworten am Ende auf die Werteberechnung in Form von Würfelmodifikatoren auswirken. (Ich würde hier wohl mit Zählern arbeiten, also z.B. "StärkeCounter++;" oder Ähnliches.)
	
Danach schlüpft der Nutzer in die Rolle der Figur und durchlebt einzelne Lebensabschnitte in Form eines textbasierten "Entscheidungsspiels". Die Bezeichnung trifft es nicht ganz und resultiert aus einer Ermanglung eines besseren Wortes, aber das Ganze lässt sich vielleicht mit Kinderbüchern, die in Abhängigkeit von Entscheidungen auf eine bestimmte Seitenzahl verweisen, vergleichen. Nur, dass sich die Anwendung die Entscheidungen des Nutzers merkt und sich während der Generierung daran anpasst. Ich werde wohl hauptsächlich mit Flags und Countern arbeiten, um das zu realisieren.

Je nach Voreinstellungen startet die Hintergrundgenerierung mit unterschiedlichen oder angepassten Fragen- und Antwortstellungen, daher sind diese essentiell. Hier würde ich dann wohl Pools setzen, also je nach System oder Sinn und Zweck der Figur - einfach deswegen, weil sich die Fragen nach eben diesen Punkten richten müssen, um eine gewisse Relevanz hineinzubringen. (...)

____________________________________________________________________________________________________________________________

Zum Kooperationsmodus (webbasiert)

Änderungen werden möglichst in Echtzeit auf beiden Rechnern gezeigt. Über Mikrofon kann miteinander kommunziert werden.
Spielleiter und Spieler einigen sich auf grobe Rahmenbedingungen, wie Setting usw. Danach beginnt die Generierung der erzählerischen Anteile. Hier entscheidet größtenteils der Spieler über Details, aber je nach Loyalitätsstufe und Kenntnisgrad des Kontakts tauchen ab und zu Fragestellungen auf, die sich ausschließlich an den Spielleiter richten. Dem Spieler bleiben sie verborgen. Auch hier macht die Anwendung Vorschläge, wenn sie einen Trend in eine bestimmte Richtung erkennen kann. 


Beispiel: 

Spieler möchte für seine Figur Thorin den Bekannten XY erstellen. Spieler und Spielleiter geben zunächst das Geschlecht, den Namen, das Setting usw. ein und einigen sich auf die Loyalitätsstufe und den Kenntnisgrad seines neuen Kontaktes. Beide Faktoren sind für die verdeckten Fragen relevant. Nun beantwortet der Spieler, ähnlich wie beim Hintergrundgenerator, Fragen zu seinem Charakter. Der Spielleiter verfolgt die Eingaben in Echtzeit. Eine verdeckte Frage könnte z.B. wie folgt aussehen:
"Welche Geheimnisse hat Bekannter XY vor Thorin?"
Abhängig von einem Würfelwurf mit einem Modifier je nach Kenntnisgrad wird zunächst ermittelt, ob es ein Geheimnis gibt und wenn ja, wie groß das Geheimnis ist. Anschließend werden Vorschläge gemacht - der Spielleiter kann hier aber auch selbst etwas eintragen. Währenddessen wird dem Spieler angezeigt, dass der Spielleiter eine verdeckte Frage beantwortet - natürlich ohne sie dem Spieler aufzudecken.
	
____________________________________________________________________________________________________________________________


===================================
=== Feedback Alpers, 2016-04-12 ===
===================================

Hätten Sie da nicht derart viel Arbeit investiert und aufgezeigt, dass Sie Ansätze für eine Vielzahl an Interaktionen haben, dann würde ich auch bei Ihnen sagen, dass es sich praktisch nur um ein Datenbankanwendung handelt. Aber bei Ihrem Ansatz wird es voraussichtlich darum gehen, eine Vielzahl an Generatoren und (ggf. dynamischen) Regelsystemen gehen. Das wird dann zwar weniger Spaß bei der Bedienung machen, aber es ist eine (für Einsteiger) recht anspruchsvolle Idee, also bleiben Sie dabei.

===============================================================
=== Zweiter Aufgabenblock (identisch für alle Studierenden) ===
===============================================================
(gelöscht, da im Lernraum für alle einsehbar)

===================================
=== Feedback Alpers, 2016-05-04 ===
===================================

Leider haben Sie an dieser Stelle die Beschreibung noch nicht weiter konkretisiert. Das ist aber wichtig, da die Beschreibung an essentiellen Stellen noch zu allgemein formuliert ist. Hier ein Beispiel:
- logische und nachvollziehbare Verknüpfung von beschreibenen Elementen; Unterteilung in verschiedene Pools
Das ist ein netter Marketingslogan, sagt aber gerade nicht aus, wie die logischen Verknüpfungen aussehen. Es sagt auch nichts darüber aus, warum die nachvollziehbar sein sollen. Und was sind die Kriterien, nach denen die Pools erzeugt werden? Genau diese Punkte müssen aber geklärt sein, bevor Sie auch nur mit der Strukturierung der Software anfangen. Seien Sie sich insbesondere darüber im Klaren, dass es für neue Teammitglieder möglich sein muss, die Beschreibungen ohne große Erklärungen wie geplant umzusetzen.

Arbeiten Sie deshalb die Beschreibung zuallererst einmal konzentriert durch und formulieren Sie konkret aber knapp aus, was genau das Projekt ausmacht.

Beachten Sie außerdem die folgenden beiden Punkte:

(1) Interaktion zwischen NutzerInnen und Programm. Lesen Sie dazu meine Ausführung unter http://www.elearning.haw-hamburg.de/mod/book/view.php?id=607850&chapterid=1846

(2) Webbasiert: Momentan ist es für das Spiel vollkommen irrelevant, ob der Rechner vernetzt ist oder nicht. Es soll aber ein zentrales Element sein, dass das Programm vernetzt (aka webbasiert) ist. Die einfachste Möglichkeit dafür besteht darin, dass mehrere Spieler gleichzeitig in einer Spielwelt unterwegs sind, bzw. bei Ihrem Projekt, dass mehrere Meister gemeinsam an einem Abenteuer arbeiten. Ein gutes Konzept wäre in dieser Hinsicht eines, bei dem NutzerInnen genauso miteinander wie mit dem Programm interagieren (siehe 1).

Wertung 2: Projektbeschreibung: gesamt: 2 / 10
- Pro Interaktionsmöglichkeit: 0 (denn momentan haben Sie zwar grundsätzlich konzipiert, wozu die Anwendung dienen soll, aber die eigentliche Interaktion fehlt noch)
- Knappe aber klare Beschreibung: 5 (Die Zusammenfassung ist gut.)
- Werbeslogans u.ä.: 0 
- Designaspekte: 0 
- Voraussetzung bekannten Wissens: -3

===================================
=== Feedback Alpers, 2016-06-16 ===
===================================

Leider keine Änderungen seit letztem Feedback.

===================================
=== Feedback Alpers, 2016-07-15 ===
===================================

Gleich vorweg: Sie haben heute zum ersten Mal seit über zwei Monaten am Projekt gearbeitet. Das ist deutlich zu wenig.

Bezüglich dessen, was Sie als Kinderbücher bezeichnen: Solche Bücher laufen  unter dem Begriff "Abenteuer-Spielbuch". Eine der bekanntesten Reihen in diesem Bereich finden Sie z.B. hier als online-Version: https://www.projectaon.org/en/Main/Home

Bezüglich des Kooperationsmodus: Lassen Sie zwei Dinge bitte weg: 1.) Kommunikation per Mikrofon; das ist unnötig: Wir reden hier über eine Webanwendung, also über ein Programm, dass komplette Buchseiten innerhalb von weniger als einer Sekunde rund um die Welt schicken kann.

Außerdem ist die Beschränkung auf zwei Personen sinnlos, denn: Es geht um eine Webanwendung.

Genauso der Satz: "Änderungen werden möglichst in Echtzeit auf beiden Rechnern gezeigt." Nochmal: Wir reden über eine Webanwendung...

Auch der Satz "Danach beginnt die Generierung der erzählerischen Anteile." weist darauf hin, dass Sie noch zu nahe an klassischer Projektarbeit sind: Warum sollen die Nutzer der Software nicht selbständig entscheiden, wann Sie sich um welche Anteile kümmern?

Insgesamt ist Ihre Beschreibung deutlich zu ausführlich: Es soll eine stichpunktartige Aufzählung sein, auf deren Basis die weitere Entwicklung des Programms erfolgt, keine "echte" Inhaltsangabe im Sinne des Deutschunterrichts.

Wertung 2: Projektbeschreibung: gesamt: 4 / 10
- Pro Interaktionsmöglichkeit: 1
- Knappe aber klare Beschreibung: 3 (Zu umfangreich; nur schwer als Basis für die weitere Entwicklung nutzbar.)
- Werbeslogans u.ä.: 0 
- Designaspekte: 0 
- Voraussetzung bekannten Wissens: 0

===================================
=== Feedback Alpers, 2016-07-28 ===
===================================

Leider keine Änderungen seit dem letzten Feedback. 

Bitte beachten Sie, dass eine der Voraussetzungen zum Erhalt des Leistungsnachweises darin besteht, dass Sie kontinuierlich am Projekt arbeiten. Wie schon mehrfach erklärt gilt: Kontinuierliches Arbeiten bedeutet jede Woche am Projekt zu arbeiten. Und da für das Projekt ein Arbeitsaufwand von 80 Stunden (innerhalb der 16 Wochen Vorlesungszeit) aufgebracht werden soll, bedeutet das, dass Sie pro Woche 5 Stunden für das Projekt investieren müssen. Wenn Sie weiterhin deutlich weniger am Projekt arbeiten, dann muss ich es auf der Basis des aktuellen Stands bewerten.
