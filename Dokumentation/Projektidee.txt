=== Projektidee ColePfeiffer, 2016-07-12 ===

____________________________________________________________________________________________________________________________

					Projektidee für Projekt 1: Tool zur Erstellung von Nichtspielercharakteren für das Pen & Paper-System Midgard
____________________________________________________________________________________________________________________________


Kurz und knapp: Ich bin ein großer P&P-Rollenspielfan. Als Spielleiter ist es für fast jedes eigene Abenteuer nötig, sich Nichtspielercharaktere auszudenken, die häufig nur in einem Abenteuer auftauchen und somit den Aufwand der Erstellung kaum rechtfertigen. Die Anwendung soll diesen Prozess schneller- und einfacher machen.


Hauptfunktionen der Anwendung


	-	Auswürfeln der reinen Werte - angepasst ans jeweilige Spielesystem 
	-	interaktiver Charakterhintergrundgenerator, der die erzählerischen Aspekte des Charakters abdeckt (z.B. Werdegang, Moral)
	-	Kooperationsmodus für das Erstellen von Kontakten von Spielfiguren: Spielleiter und Spieler können synchron an Figuren arbeiten.
	
	- 	Accountverwaltung und eigene Inhalte
	
		-	nach einer Accounterstellung können Charaktere in einer Bibliothek abgespeichert und verwaltet werden
		-	Nutzer können die Anwendung durch neue Systeme, Settingvorgaben und individuell angepasste Einstellungsoptionen bei der Hintergrundgenerierung erweitern;
		-	alle öffentlichen, nutzergenerierten Inhalte können von anderen Usern über eine filterbare Suchfunktion eingesehen, bewertet und kommentiert werden; zudem lassen sie sich in die eigene Bibliothek importieren#
		
____________________________________________________________________________________________________________________________

					Details
____________________________________________________________________________________________________________________________

Details zum Ablauf


Sowohl bei der Wertegenerierung als auch beim Generieren des Charakterhintergrunds nimmt der Nutzer zunächst Anpassungen vor:
Er wählt sein Spielsystem, das Setting, sowie die Abenteuerart (z.B. Stadt, Detektivabenteuer) und die Wichtigkeit der Figur (z.B. storyrelvant) oder ihre Funktion (z.B. Zeuge). Darüber hinaus können weitere optionale Anpassungen vorgenommen werden (z.B. Geschlecht oder Name).

Jetzt kann der Nutzer zwischen zwei Erstellungsverfahren wählen:

1. Erst die Werteberechnung, dann die Hintergrundgenerierung
	- das ist dann sinnvoll, wenn der Nutzer eine Figur erstellen will, die schon im Vorhinein größtenteils feststeht
	- hier würde das Programm auf die Werte eingehen und basierend auf Stärken und Schwächen Vorschläge machen. 

2. Erst die Hintergrundgenerierung, dann die Werteberechnung
	- dann sinnvoll, wenn man noch nicht genau weiß in welche Richtung es gehen soll, aber man Werte möchte, die sich nach der Lebensgeschichte der Figur richten 
	- Hier würden sich Nutzerantworten am Ende auf die Werteberechnung in Form von Würfelmodifikatoren auswirken. (Ich würde hier wohl mit Zählern arbeiten, also z.B. "StärkeCounter++;" oder Ähnliches.)
	
Danach schlüpft der Nutzer in die Rolle der Figur und durchlebt einzelne Lebensabschnitte in Form eines textbasierten "Entscheidungsspiels". Die Bezeichnung trifft es nicht ganz und resultiert aus einer Ermanglung eines besseren Wortes, aber das Ganze lässt sich vielleicht mit Kinderbüchern, die in Abhängigkeit von Entscheidungen auf eine bestimmte Seitenzahl verweisen, vergleichen. Nur, dass sich die Anwendung die Entscheidungen des Nutzers merkt und sich während der Generierung daran anpasst. Ich werde wohl hauptsächlich mit Flags und Countern arbeiten, um das zu realisieren.

Je nach Voreinstellungen startet die Hintergrundgenerierung mit unterschiedlichen oder angepassten Fragen- und Antwortstellungen, daher sind diese essentiell. Hier würde ich dann wohl Pools setzen, also je nach System oder Sinn und Zweck der Figur - einfach deswegen, weil sich die Fragen nach eben diesen Punkten richten müssen, um eine gewisse Relevanz hineinzubringen. (...)

____________________________________________________________________________________________________________________________

Zum Kooperationsmodus (webbasiert)

Änderungen werden möglichst in Echtzeit auf beiden Rechnern gezeigt. Über Mikrofon kann miteinander kommunziert werden.
Spielleiter und Spieler einigen sich auf grobe Rahmenbedingungen, wie Setting usw. Danach beginnt die Generierung der erzählerischen Anteile. Hier entscheidet größtenteils der Spieler über Details, aber je nach Loyalitätsstufe und Kenntnisgrad des Kontakts tauchen ab und zu Fragestellungen auf, die sich ausschließlich an den Spielleiter richten. Dem Spieler bleiben sie verborgen. Auch hier macht die Anwendung Vorschläge, wenn sie einen Trend in eine bestimmte Richtung erkennen kann. 


Beispiel: 

Spieler möchte für seine Figur Thorin den Bekannten XY erstellen. Spieler und Spielleiter geben zunächst das Geschlecht, den Namen, das Setting usw. ein und einigen sich auf die Loyalitätsstufe und den Kenntnisgrad seines neuen Kontaktes. Beide Faktoren sind für die verdeckten Fragen relevant. Nun beantwortet der Spieler, ähnlich wie beim Hintergrundgenerator, Fragen zu seinem Charakter. Der Spielleiter verfolgt die Eingaben in Echtzeit. Eine verdeckte Frage könnte z.B. wie folgt aussehen:
"Welche Geheimnisse hat Bekannter XY vor Thorin?"
Abhängig von einem Würfelwurf mit einem Modifier je nach Kenntnisgrad wird zunächst ermittelt, ob es ein Geheimnis gibt und wenn ja, wie groß das Geheimnis ist. Anschließend werden Vorschläge gemacht - der Spielleiter kann hier aber auch selbst etwas eintragen. Währenddessen wird dem Spieler angezeigt, dass der Spielleiter eine verdeckte Frage beantwortet - natürlich ohne sie dem Spieler aufzudecken.
	
____________________________________________________________________________________________________________________________


===================================
=== Feedback Alpers, 2016-04-12 ===
===================================

Hätten Sie da nicht derart viel Arbeit investiert und aufgezeigt, dass Sie Ansätze für eine Vielzahl an Interaktionen haben, dann würde ich auch bei Ihnen sagen, dass es sich praktisch nur um ein Datenbankanwendung handelt. Aber bei Ihrem Ansatz wird es voraussichtlich darum gehen, eine Vielzahl an Generatoren und (ggf. dynamischen) Regelsystemen gehen. Das wird dann zwar weniger Spaß bei der Bedienung machen, aber es ist eine (für Einsteiger) recht anspruchsvolle Idee, also bleiben Sie dabei.

===============================================================
=== Zweiter Aufgabenblock (identisch für alle Studierenden) ===
===============================================================
(gelöscht, da im Lernraum für alle einsehbar)

===================================
=== Feedback Alpers, 2016-05-04 ===
===================================

Leider haben Sie an dieser Stelle die Beschreibung noch nicht weiter konkretisiert. Das ist aber wichtig, da die Beschreibung an essentiellen Stellen noch zu allgemein formuliert ist. Hier ein Beispiel:
- logische und nachvollziehbare Verknüpfung von beschreibenen Elementen; Unterteilung in verschiedene Pools
Das ist ein netter Marketingslogan, sagt aber gerade nicht aus, wie die logischen Verknüpfungen aussehen. Es sagt auch nichts darüber aus, warum die nachvollziehbar sein sollen. Und was sind die Kriterien, nach denen die Pools erzeugt werden? Genau diese Punkte müssen aber geklärt sein, bevor Sie auch nur mit der Strukturierung der Software anfangen. Seien Sie sich insbesondere darüber im Klaren, dass es für neue Teammitglieder möglich sein muss, die Beschreibungen ohne große Erklärungen wie geplant umzusetzen.

Arbeiten Sie deshalb die Beschreibung zuallererst einmal konzentriert durch und formulieren Sie konkret aber knapp aus, was genau das Projekt ausmacht.

Beachten Sie außerdem die folgenden beiden Punkte:

(1) Interaktion zwischen NutzerInnen und Programm. Lesen Sie dazu meine Ausführung unter http://www.elearning.haw-hamburg.de/mod/book/view.php?id=607850&chapterid=1846

(2) Webbasiert: Momentan ist es für das Spiel vollkommen irrelevant, ob der Rechner vernetzt ist oder nicht. Es soll aber ein zentrales Element sein, dass das Programm vernetzt (aka webbasiert) ist. Die einfachste Möglichkeit dafür besteht darin, dass mehrere Spieler gleichzeitig in einer Spielwelt unterwegs sind, bzw. bei Ihrem Projekt, dass mehrere Meister gemeinsam an einem Abenteuer arbeiten. Ein gutes Konzept wäre in dieser Hinsicht eines, bei dem NutzerInnen genauso miteinander wie mit dem Programm interagieren (siehe 1).

Wertung 2: Projektbeschreibung: gesamt: 2 / 10
- Pro Interaktionsmöglichkeit: 0 (denn momentan haben Sie zwar grundsätzlich konzipiert, wozu die Anwendung dienen soll, aber die eigentliche Interaktion fehlt noch)
- Knappe aber klare Beschreibung: 5 (Die Zusammenfassung ist gut.)
- Werbeslogans u.ä.: 0 
- Designaspekte: 0 
- Voraussetzung bekannten Wissens: -3

===================================
=== Feedback Alpers, 2016-06-16 ===
===================================

Leider keine Änderungen seit letztem Feedback.
