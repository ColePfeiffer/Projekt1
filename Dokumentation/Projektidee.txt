===================================
=== 	 Nicht-spieler-Charaktergenerator für Pen & Paper-Systeme	
=== 			Projektidee ColePfeiffer, 2016-11-09 
===================================

____________________________________________

Links zum Spreadsheet und zur GoogleDocs-Version

Spreadsheet: 
https://docs.google.com/spreadsheets/d/1cuqL1gfQCAzdlc3QMM2kMz-1ESQbYGHfs5jEqbDLmaU/edit?usp=sharing

GoogleDoc (mit Formatierung // alt und ausführlich):
https://docs.google.com/document/d/1a620CZdZxkBEZM4UboCVd3AAZPHF7xmTcpjtatxIlsA/edit#

____________________________________________

Anmerkung vom 09.11.2016:

Habe die Projektbeschreibung erneut gekürzt und die Stichpunkte jetzt auch in der Gitansicht klarer hervorgehoben.

____________________________________________


Anwendung: NSC-Generator für Pen & Paper-Rollenspiele

====== Inhalt ======

## Wofür?

	- für die Erstellung von Hintergrundgeschichten von NSCs
	- übernimmt eine passende ergänzende dynamische Berechnung aller Werte

## Kernelemente

	- arbeitet mit Fragenpools, die sich im Laufe der Generierung, je nach ausgewählten Antworten, verändern
	
			Fragenpools sind ...
			
			- Gruppierungen von Fragen und Antworten
			- in Kategorien unterteilt, die nacheinander durchlaufen werden
			- Kategorien stehen in Abhängigkeiten zueinander
	
	- Kooperationsmodus für die gemeinsame Nutzung des Generators für beliebig viele Nutzer 
	
	- Account-Verwaltung und Bibliothek
			- erstelle Figuren können in der Bibliothek gespeichert, geteilt und eingesehen werden
			- Suchfunktion für öffentliche Inhalte
			- Figuren sind bewertbar, kommentierbar und importierbar
				
	- Erweiterbarkeit
			- neue Fragen/Antworten sollen einfach zum Generator hinzugefügt werden können

			

====== Grober Ablauf der Generierung ======



## Erstellung des Grundfragenpools
	- Nutzer füllt anfangs Pflichtfelder aus
	- besonders ausschlaggebend: System, Rolle und Typ
	- Setting lässt unpassende Fragen wegfallen (SciFi in Mittelalterwelt)
	- Rolle und Typ geben Auskunft über die Funktion der Figur (Antagonist, Nebenfigur, Statist, Antagonist, etc)

	- bestimmen den Detailgrad der Fragen und die Generierung des Grundfragenpools
	- optionale Felder führen zu einem kleineren, aber spezialisierten Pool

## Verlauf des Grundfragenpools

	- Frage/Antwort-Phase startet:
	- Nutzer soll wiederholt aus einer Gruppe von Antworten eine auswählen
	- Fragen gliedern sich anhand von Abschnitten (Kindheit, Moral, Werdegang, etc)
	- basierend auf den Nutzereingaben bearbeitet die Anwendung kontinuierlich den Fragenpool 
	- das führt zu einem zunehmend kleinerwerdenden, individualisierten Pool 
	
	- Anwendung macht Vorschläge / hebt Konflikte hervor, 
	- wenn sie merkt, dass eine gemachte Auswahl eine frühere maßgeblich revidieren könnte

## Werteberechnung
	
	- währenddessen zählen Counter für verschiedene Würfelmodifikatoren mit
	// Beispiel:
	// Für folgende Eigenschaften könnte ein Counter  für Stärke/Gewandtheit hochzählen:
	//		- Figur kommt vom Land
	//		- geht einem körperlichen Beruf nach	
	// 		- treibt viel Sport o.Ä.		

## Ausgaben

	- Ausgabe einer Übersicht oder einer Zusammenfassung der Persönlichkeit des NSCs



	

====== Interaktionsarten ======


Erste Form – klassisches EVA-Prinzip bei hierarchischen Fragestellungen
 
E: Nutzer soll eine Auswahl aus verschiedenen Antworten treffen, um eine Frage zu beantworten.
V: Das Programm generiert basierend auf der Nutzereingabe (für den Nutzer nicht einsehbar) passende weitere Fragen und Auswahlmöglichkeiten.
A: Gibt die nächste Frage aus, Nutzer wählt erneut aus, usw.
 
Zweite Form - Sinnvolle Kombinationen finden auf globaler Ebene
 
E: wie oben
V und R (Reaktion): Das Programm muss Kombinationen bilden können, um auf globaler Ebene zu funktionieren – hier kommen die Abhängigkeiten ins Spiel. Hat eine Figur x und y gewählt, dann kann sie nicht mehr z wählen. Hätte sie nur x oder y gewählt, könnte sie z wählen. Das Programm soll möglichst sinnvoll auf Nutzereingaben reagieren. Es streicht also konsequent Fragen oder Antworten aus späteren Kategorien – oder aber wählt besonders passende Fragen und Antworten heraus, die aufgrund der Kombination vorheriger Eingaben besonders interessant scheinen.
 
Dritte Form – Konflikte ausfindig machen und Vorschläge machen
 
E: wie oben
V und R: Das Programm wertet bisher erfolgte, gespeicherte, Nutzereingaben auch auf bereits abgeschlossene Fragenstellungen an. Das heißt, dass bei entsprechender Eingabe auch im Nachhinein, auf alte Fragen verwiesen wird, falls ein „Konflikt“ auftaucht.
Beispiel: Die Figur soll besonders tierlieb sein, er könne niemals ein Tier verletzen. Später wählt der Nutzer den Beruf Schlachter. Nun verweist das Programm auf die entsprechende Stelle, bietet einen Alternativvorschlag oder fordert den Nutzer dazu auf, den Konflikt näher zu beschreiben.











===================================
=== Feedback Alpers, 2016-04-12 ===
===================================

Hätten Sie da nicht derart viel Arbeit investiert und aufgezeigt, dass Sie Ansätze für eine Vielzahl an Interaktionen haben, dann würde ich auch bei Ihnen sagen, dass es sich praktisch nur um ein Datenbankanwendung handelt. Aber bei Ihrem Ansatz wird es voraussichtlich darum gehen, eine Vielzahl an Generatoren und (ggf. dynamischen) Regelsystemen gehen. Das wird dann zwar weniger Spaß bei der Bedienung machen, aber es ist eine (für Einsteiger) recht anspruchsvolle Idee, also bleiben Sie dabei.

===============================================================
=== Zweiter Aufgabenblock (identisch für alle Studierenden) ===
===============================================================
(gelöscht, da im Lernraum für alle einsehbar)

===================================
=== Feedback Alpers, 2016-05-04 ===
===================================

Leider haben Sie an dieser Stelle die Beschreibung noch nicht weiter konkretisiert. Das ist aber wichtig, da die Beschreibung an essentiellen Stellen noch zu allgemein formuliert ist. Hier ein Beispiel:
- logische und nachvollziehbare Verknüpfung von beschreibenen Elementen; Unterteilung in verschiedene Pools
Das ist ein netter Marketingslogan, sagt aber gerade nicht aus, wie die logischen Verknüpfungen aussehen. Es sagt auch nichts darüber aus, warum die nachvollziehbar sein sollen. Und was sind die Kriterien, nach denen die Pools erzeugt werden? Genau diese Punkte müssen aber geklärt sein, bevor Sie auch nur mit der Strukturierung der Software anfangen. Seien Sie sich insbesondere darüber im Klaren, dass es für neue Teammitglieder möglich sein muss, die Beschreibungen ohne große Erklärungen wie geplant umzusetzen.

Arbeiten Sie deshalb die Beschreibung zuallererst einmal konzentriert durch und formulieren Sie konkret aber knapp aus, was genau das Projekt ausmacht.

Beachten Sie außerdem die folgenden beiden Punkte:

(1) Interaktion zwischen NutzerInnen und Programm. Lesen Sie dazu meine Ausführung unter http://www.elearning.haw-hamburg.de/mod/book/view.php?id=607850&chapterid=1846

(2) Webbasiert: Momentan ist es für das Spiel vollkommen irrelevant, ob der Rechner vernetzt ist oder nicht. Es soll aber ein zentrales Element sein, dass das Programm vernetzt (aka webbasiert) ist. Die einfachste Möglichkeit dafür besteht darin, dass mehrere Spieler gleichzeitig in einer Spielwelt unterwegs sind, bzw. bei Ihrem Projekt, dass mehrere Meister gemeinsam an einem Abenteuer arbeiten. Ein gutes Konzept wäre in dieser Hinsicht eines, bei dem NutzerInnen genauso miteinander wie mit dem Programm interagieren (siehe 1).

Wertung 2: Projektbeschreibung: gesamt: 2 / 10
- Pro Interaktionsmöglichkeit: 0 (denn momentan haben Sie zwar grundsätzlich konzipiert, wozu die Anwendung dienen soll, aber die eigentliche Interaktion fehlt noch)
- Knappe aber klare Beschreibung: 5 (Die Zusammenfassung ist gut.)
- Werbeslogans u.ä.: 0 
- Designaspekte: 0 
- Voraussetzung bekannten Wissens: -3

===================================
=== Feedback Alpers, 2016-06-16 ===
===================================

Leider keine Änderungen seit letztem Feedback.

===================================
=== Feedback Alpers, 2016-07-15 ===
===================================

Gleich vorweg: Sie haben heute zum ersten Mal seit über zwei Monaten am Projekt gearbeitet. Das ist deutlich zu wenig.

Bezüglich dessen, was Sie als Kinderbücher bezeichnen: Solche Bücher laufen  unter dem Begriff "Abenteuer-Spielbuch". Eine der bekanntesten Reihen in diesem Bereich finden Sie z.B. hier als online-Version: https://www.projectaon.org/en/Main/Home

Bezüglich des Kooperationsmodus: Lassen Sie zwei Dinge bitte weg: 1.) Kommunikation per Mikrofon; das ist unnötig: Wir reden hier über eine Webanwendung, also über ein Programm, dass komplette Buchseiten innerhalb von weniger als einer Sekunde rund um die Welt schicken kann.

Außerdem ist die Beschränkung auf zwei Personen sinnlos, denn: Es geht um eine Webanwendung.

Genauso der Satz: "Änderungen werden möglichst in Echtzeit auf beiden Rechnern gezeigt." Nochmal: Wir reden über eine Webanwendung...

Auch der Satz "Danach beginnt die Generierung der erzählerischen Anteile." weist darauf hin, dass Sie noch zu nahe an klassischer Projektarbeit sind: Warum sollen die Nutzer der Software nicht selbständig entscheiden, wann Sie sich um welche Anteile kümmern?

Insgesamt ist Ihre Beschreibung deutlich zu ausführlich: Es soll eine stichpunktartige Aufzählung sein, auf deren Basis die weitere Entwicklung des Programms erfolgt, keine "echte" Inhaltsangabe im Sinne des Deutschunterrichts.

Wertung 2: Projektbeschreibung: gesamt: 4 / 10
- Pro Interaktionsmöglichkeit: 1
- Knappe aber klare Beschreibung: 3 (Zu umfangreich; nur schwer als Basis für die weitere Entwicklung nutzbar.)
- Werbeslogans u.ä.: 0 
- Designaspekte: 0 
- Voraussetzung bekannten Wissens: 0

===================================
=== Feedback Alpers, 2016-07-28 ===
===================================

Leider keine Änderungen seit dem letzten Feedback. 

Bitte beachten Sie, dass eine der Voraussetzungen zum Erhalt des Leistungsnachweises darin besteht, dass Sie kontinuierlich am Projekt arbeiten. Wie schon mehrfach erklärt gilt: Kontinuierliches Arbeiten bedeutet jede Woche am Projekt zu arbeiten. Und da für das Projekt ein Arbeitsaufwand von 80 Stunden (innerhalb der 16 Wochen Vorlesungszeit) aufgebracht werden soll, bedeutet das, dass Sie pro Woche 5 Stunden für das Projekt investieren müssen. Wenn Sie weiterhin deutlich weniger am Projekt arbeiten, dann muss ich es auf der Basis des aktuellen Stands bewerten.

===================================
=== Feedback Alpers, 2016-10-31 ===
===================================

=== 1.) Formales

== 1.1.) Keine erkennbaren Stichpunkte.

Leider ist bei Ihnen nicht erkennbar, was Stichpunkte sind und wozu sie gehören. Bitte nutzen Sie Spiegelstriche, Nummerierungen oder sonst ein System, um diese erkennbar zu machen. Diese Dokument soll dazu dienen, damit beliebige Personen sich schnell einen Überblick über das Projekt verschaffen können.

== 1.2.) Keine erkennbare Trennung zwischen Inhalt und Ablauf.

Leider führen Sie Inhalte (woraus besteht die Anwendung) und Abläufe (wie ändern sich die Inhalte) gemischt auf. Dadurch ist es sehr wahrscheinlich, dass bei der Umsetzung etwas übersehen wird.

== 1.3.) Zu umfangreiche Beschreibungen.

Ein weiterer Grund, aus dem es schwierig ist, einen schnellen Überblick zu erhalten besteht darin, dass Sie zu umfangreich beschreiben. Hier ein Bsp.:

= Beginn =
NSC-Generator 
für Pen & Paper-Systeme  

Kurzbeschreibung
Warum ein NSC-Generator?

Ich bin ein großer P&P-Rollenspielfan. Als Spielleiter ist es für fast jedes eigene Abenteuer nötig, sich Nichtspielercharaktere auszudenken. Diese spielen häufig nur in einem Abenteuer mit, aber die Erstellung ist stets mit einem hohen Zeitaufwand verbunden.
Was macht die Anwendung?
 
Die Anwendung richtet sich in erster Linie an Spielleiter von Rollenspielsystemen und ist als Generator zu verstehen. Sie soll dem Nutzer bei der Erstellung der erzählerischen Anteile helfen und den kreativen Prozess durch zur Figur passende Vorschläge und Fragestellungen vereinfachen. 
= Ende =

Das ergibt als knappe Zusammenfassung:

= Beginn =
NSC-Generator für Pen & Paper-Rollenspiele 
= Ende =

Alles andere wiederholt lediglich das, was in dieser Zusammenfassung steht (Z.B. Die Anwendung ...  ist als Generator zu verstehen.) oder geht auf Details ein, die für einen Marketingtext bzw. eine Bewerbung sinnvoll sein könnten.

Hier ein weiteres Beispiel:

= Beginn =
Das bedeutet

Nutzer und Anwendung stehen in einem Austausch miteinander
die Anwendung geht auf Nutzereingaben ein- und gibt dem Nutzer individualisierte Ausgaben
die Werteberechnung der Attribute erfolgt am Ende dynamisch anhand der Antworten über Würfelmodifikatoren (siehe Werteberechnung)
= Ende =

Nutzer und Anwendung stehen in einem Austausch miteinander
-> Wenn das nicht zutreffen würde, wäre es keine Anwendung.

die Anwendung geht auf Nutzereingaben ein- und gibt dem Nutzer individualisierte Ausgaben
-> Das ist eine Wiederholung der letzten Zeile und der Anforderung an alle Projekte.

die Werteberechnung der Attribute erfolgt am Ende dynamisch anhand der Antworten über Würfelmodifikatoren (siehe Werteberechnung)
-> Damit legen Sie fest, dass Nutzer zuerst alle Eingaben erstellen sollen und dann ein Ergebnis bekommen. Das entspricht dem EVA-Modell, das gerade das Gegenteil dessen ist, was Sie entwickeln sollen.

== 1.5.) Zusammenfassung

Leider schweifen Sie immer noch viel zu sehr aus und machen es nötig, dass andere Personen viel Zeit investieren müssen, um einen Überblick über die Anwendung zu bekommen. Damit ist der aktuelle Stand nicht bewertbar.
